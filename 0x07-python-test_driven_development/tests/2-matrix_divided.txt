>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix1 = [[0, 4 ],[3, 4.4, 4,]]
>>> matrix_divided(matrix1, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    File "/home/joe/alex/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 19, in matrix_divided
        raise TypeError("Each row of the matrix must "
TypeError: Each row of the matrix must have the same size
>>> matrix2 = [[0, 4, 5 ],[3, 4.4, 4,]]
>>> matrix_divided(matrix2, 3)
[[0.0, 1.33, 1.67], [1.0, 1.47, 1.33]]
>>> matrix3 = [[0, 4, "hey" ],[3, 4.4, 4,]]
>>> matrix_divided(matrix3, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    File "/home/joe/alex/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 24, in matrix_divided
        raise TypeError("matrix must be a "
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix4 = [[0, 4, "hey" ],[3, 4.4, 4,]]
>>> matrix_divided(matrix3, -2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    File "/home/joe/alex/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 15, in matrix_divided
        raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix_divided(matrix3, 'e2')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    File "/home/joe/alex/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 13, in matrix_divided
        raise TypeError("div must be a number")
TypeError: div must be a number

